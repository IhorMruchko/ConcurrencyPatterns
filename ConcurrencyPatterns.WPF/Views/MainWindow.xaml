<Window x:Class="ConcurrencyPatterns.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ConcurrencyPatterns.WPF.Views"
        xmlns:commands="clr-namespace:ConcurrencyPatterns.WPF.Resources"
        xmlns:viewModels="clr-namespace:ConcurrencyPatterns.WPF.ViewModels"
        ResizeMode="NoResize"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        FontSize="14"
        FontFamily="Cascadia code semilight"
        mc:Ignorable="d"
        Title="MainWindow" 
        Height="450"
        Width="900"
        Background="#181818"
        MouseDown="Window_MouseDown">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding ElementName=MenuDockPanel, Path=Width}"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <DockPanel x:Name="MenuDockPanel"
                   Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=ActualHeight}"
                   Style="{StaticResource MenuDockPanelStyle}"
                   Width="30">

            <Button DockPanel.Dock="Top"
                    Width="{Binding ElementName=MenuDockPanel, Path=Width}"
                    Style="{DynamicResource MenuButtonStyle}"
                    Command="{Binding SelectConcreteCommand}"
                    CommandParameter="{x:Type viewModels:ActiveObjectThreadExampleViewModel}">
                <DockPanel Width="{Binding ElementName=MenuDockPanel, Path=Width}">
                    <Image Source="{StaticResource ActiveObjectIcon}"/>
                    <Label Content="Active object"
                           Foreground="{DynamicResource MenuButton.Static.Foreground}"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"/>
                </DockPanel>
            </Button>

            <Button DockPanel.Dock="Top"
                    Width="{Binding ElementName=MenuDockPanel, Path=Width}"
                    Style="{DynamicResource MenuButtonStyle}"
                    Command="{Binding SelectConcreteCommand}"
                    CommandParameter="{x:Type viewModels:BalkingObjectThreadExampleViewModel}">
                <DockPanel Width="{Binding ElementName=MenuDockPanel, Path=Width}">
                    <Image Source="{StaticResource BalkingObjectIcon}"/>
                    <Label Content="Balking object"
                           Foreground="{DynamicResource MenuButton.Static.Foreground}"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"/>
                </DockPanel>
            </Button>

            <Button DockPanel.Dock="Top"
                    Width="{Binding ElementName=MenuDockPanel, Path=Width}"
                    Style="{DynamicResource MenuButtonStyle}"
                    Command="{Binding SelectConcreteCommand}"
                    CommandParameter="{x:Type viewModels:SingletonObjectThreadExampleViewModel}">
                <DockPanel Width="{Binding ElementName=MenuDockPanel, Path=Width}">
                    <Image Source="{StaticResource SingletonIcon}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                    <Label Content="Singleton object"
                           Foreground="{DynamicResource MenuButton.Static.Foreground}"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"/>
                </DockPanel>
            </Button>

            <Button DockPanel.Dock="Top"
                    Width="{Binding ElementName=MenuDockPanel, Path=Width}"
                    Style="{DynamicResource MenuButtonStyle}"
                    Command="{Binding SelectConcreteCommand}"
                    CommandParameter="{x:Type viewModels:GuardedSuspensionThreadExampleViewModel}">
                <DockPanel Width="{Binding ElementName=MenuDockPanel, Path=Width}">
                    <Image Source="{StaticResource GuardedSuspensionIcon}"/>
                    <Label Content="Guarded suspension"
                           Foreground="{DynamicResource MenuButton.Static.Foreground}"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"/>
                </DockPanel>
            </Button>

            <Button DockPanel.Dock="Top"
                    Width="{Binding ElementName=MenuDockPanel, Path=Width}"
                    Style="{DynamicResource MenuButtonStyle}"
                    Command="{Binding SelectConcreteCommand}"
                    CommandParameter="{x:Type viewModels:BarrierObjectThreadExampleViewModel}">
                <DockPanel Width="{Binding ElementName=MenuDockPanel, Path=Width}">
                    <Image Source="{StaticResource BarrierIcon}"/>
                    <Label Content="Barrier pattern"
                           Foreground="{DynamicResource MenuButton.Static.Foreground}"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"/>
                </DockPanel>
            </Button>

            <Button DockPanel.Dock="Bottom"
                    Width="{Binding ElementName=MenuDockPanel, Path=Width}"
                    Style="{DynamicResource MenuButtonStyle}"
                    Command="{x:Static commands:Commands.CloseCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                <DockPanel Width="{Binding ElementName=MenuDockPanel, Path=Width}">
                    <Image Source="{StaticResource DoorExitIcon}"/>
                    <Label Content="Exit"
                           Foreground="{DynamicResource MenuButton.Static.Foreground}"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"/>
                </DockPanel>
            </Button>
            <Button DockPanel.Dock="Bottom"
                    Width="{Binding ElementName=MenuDockPanel, Path=Width}"
                    Style="{DynamicResource MenuButtonStyle}"
                    Command="{x:Static commands:Commands.MinimizeCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                <DockPanel Width="{Binding ElementName=MenuDockPanel, Path=Width}">
                    <Image Source="{StaticResource MinimizeIcon}"/>
                    <Label Content="Minimize"
                           Foreground="{DynamicResource MenuButton.Static.Foreground}"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"/>
                </DockPanel>
            </Button>
            <Button DockPanel.Dock="Bottom"
                    Width="{Binding ElementName=MenuDockPanel, Path=Width}"
                    Style="{DynamicResource MenuButtonStyle}"
                    Command="{x:Static commands:Commands.NormalizeCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                <DockPanel Width="{Binding ElementName=MenuDockPanel, Path=Width}">
                    <Image Source="{StaticResource NormalizeIcon}"/>
                    <Label Content="Normalize"
                           Foreground="{DynamicResource MenuButton.Static.Foreground}"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"/>
                </DockPanel>
            </Button>
            <Button DockPanel.Dock="Bottom"
                    Width="{Binding ElementName=MenuDockPanel, Path=Width}"
                    Style="{DynamicResource MenuButtonStyle}"
                    Command="{x:Static commands:Commands.MaximizeCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                <DockPanel Width="{Binding ElementName=MenuDockPanel, Path=Width}">
                    <Image Source="{StaticResource MaximizeIcon}"/>
                    <Label Content="Maximize"
                           Foreground="{DynamicResource MenuButton.Static.Foreground}"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"/>
                </DockPanel>
            </Button>
        </DockPanel>

        <ContentControl Grid.Column="1"
                        Content="{Binding SelectedViewModel}"/>
    </Grid>
</Window>
